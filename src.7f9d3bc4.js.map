{"version":3,"sources":["index.js"],"names":["refs","timer","document","querySelector","days","hours","mins","secs","CountdownTimer","selector","targetDate","setInterval","currentTime","Date","now","deltaTime","time","getTimeComponents","finishTime","textContent","updateClockface","pad","Math","floor","clearInterval","intervalId","value","String","padStart","innerHTML"],"mappings":";;;AA0DA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EA1DA,QAAA,mBAEA,IAAMA,EAAO,CACTC,MAAOC,SAASC,cAAc,YAC9BC,KAAMF,SAASC,cAAc,2BAC7BE,MAAOH,SAASC,cAAc,4BAC9BG,KAAMJ,SAASC,cAAc,2BAC7BI,KAAML,SAASC,cAAc,4BAG3BK,EAAAA,WACoC,SAAA,EAAA,GAAA,IAAA,EAAA,KAAxBC,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAc,EAAA,KAAA,GAIzB,EAAA,KAAA,aAAA,MAEAC,EAAAA,KAAAA,aAAAA,YAAY,WACfC,IAAAA,EAAcC,KAAKC,MACnBC,EAAY,EAAKL,WAAaE,EAChCI,EAAO,EAAKC,kBAAkBF,GAE/BA,GAAa,IACd,EAAKG,aACLF,EAAO,CAAEZ,KAAM,KAAMC,MAAO,KAAMC,KAAM,KAAMC,KAAM,MACpDP,EAAKC,MAAMkB,YAAc,qBAG3B,EAAKC,gBAAgBJ,GAEeA,IAAAA,EAAAA,EAA5BZ,EAAAA,KAAMC,EAAAA,MAAOC,EAAAA,KAAMC,EAAAA,MAC5B,MAnBIE,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EA6CxB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,oBAzBsBM,MAAAA,SAAAA,GAMP,MAAA,CAAEZ,KALI,KAAKiB,IAAIC,KAAKC,MAAMP,EAAQ,QAK1BX,MAJD,KAAKgB,IAAIC,KAAKC,MAAOP,EAAQ,MAAyB,OAI9CV,KAHT,KAAKe,IAAIC,KAAKC,MAAOP,EAAQ,KAAoB,MAGlCT,KAFf,KAAKc,IAAIC,KAAKC,MAAOP,EAAQ,IAAc,SAqBhE,CAAA,IAAA,aAhBiB,MAAA,WACXQ,cAAc,KAAKC,cAezB,CAAA,IAAA,MAZQC,MAAAA,SAAAA,GACOC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,OAWzC,CAAA,IAAA,kBARiD,MAAA,SAAA,GAA3BxB,IAAAA,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KACjCP,EAAKI,KAAKyB,UAAYzB,EACtBJ,EAAKK,MAAMwB,UAAYxB,EACvBL,EAAKM,KAAKuB,UAAYvB,EACtBN,EAAKO,KAAKsB,UAAYtB,MAI9B,EAhDMC,GAgDN,IAAIA,EAAe,CACjBC,SAAU,WACVC,WAAY,IAAIG,KAAK","file":"src.7f9d3bc4.js","sourceRoot":"..\\src","sourcesContent":["import './css/timer.css';\r\n\r\nconst refs = {\r\n    timer: document.querySelector('#timer-1'),\r\n    days: document.querySelector('span[data-value=\"days\"]'),\r\n    hours: document.querySelector('span[data-value=\"hours\"]'),\r\n    mins: document.querySelector('span[data-value=\"mins\"]'),\r\n    secs: document.querySelector('span[data-value=\"secs\"]'),\r\n};\r\n\r\nclass CountdownTimer {\r\n    constructor({ selector, targetDate }) {\r\n      this.selector = selector;\r\n      this.targetDate = targetDate;\r\n    }\r\n    intervalId = null;\r\n\r\n    intervalId = setInterval(() => {\r\n        const currentTime = Date.now();\r\n        const deltaTime = this.targetDate - currentTime;\r\n        let time = this.getTimeComponents(deltaTime);\r\n\r\n        if(deltaTime <= 0) {\r\n          this.finishTime();\r\n          time = { days: '00', hours: '00', mins: '00', secs: '00' }\r\n          refs.timer.textContent = 'sale time expired';\r\n        }\r\n\r\n        this.updateClockface(time);\r\n\r\n        const { days, hours, mins, secs } = time;\r\n    }, 1000)\r\n\r\n    getTimeComponents(time) {\r\n        const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n        const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n    \r\n        return { days, hours, mins, secs };\r\n    }\r\n\r\n    finishTime() {\r\n      clearInterval(this.intervalId);\r\n      }\r\n\r\n    pad(value) {\r\n        return String(value).padStart(2, '0');\r\n    }\r\n\r\n    updateClockface({ days, hours, mins, secs }) {\r\n        refs.days.innerHTML = days;\r\n        refs.hours.innerHTML = hours;\r\n        refs.mins.innerHTML = mins;\r\n        refs.secs.innerHTML = secs;\r\n      }\r\n}\r\n\r\nnew CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('Nov 6, 2020, 23:07:00'),\r\n});"]}